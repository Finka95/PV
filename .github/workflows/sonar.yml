name: SonarCloud
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
jobs:
  build:
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
    
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
    
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
     
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
     
      - name: Build, Test and Analyze
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_PROJECT_NAME: ${{ vars.SONAR_PROJECT_NAME }}
          EXCLUDE_FROM_COVERAGE: "**/HealthMate.API/Program.cs, /HealthMate/**/Exceptions/, /HealthMate.DAL/DbContexts/**, /HealthMate.DAL/Migrations/, **/HealthMate.DAL/DI/**, /HealthMate.DAL/Entities/, **/HealthMate/**/Validators/**, /HealthMate//Enums/**/**, **/HealthMate/**/Repositories/, /HealthMate/**/Mappers/**, /HealthMate//ViewModels/, /HealthMate.API/Controllers/"
          EXCLUDE_FROM_SONAR: "**/HealthMate.DAL/Migrations/*"
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"$SONAR_PROJECT_KEY" /n:"$SONAR_PROJECT_NAME" /d:sonar.token="$SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.coverage.exclusions="$EXCLUDE_FROM_COVERAGE" /d:sonar.exclusions="$EXCLUDE_FROM_SONAR"
          dotnet build HealthMate/HealthMate.sln --configuration Release
          dotnet-coverage collect 'dotnet test HealthMate/HealthMate.sln --configuration Release --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover' -f xml -o 'coverage.xml'
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="$SONAR_TOKEN"
